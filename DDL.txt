-- Generated by Oracle SQL Developer Data Modeler 4.1.3.901
--   at:        2022-12-19 15:55:30 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g




CREATE TABLE Customer
  (
    name                   VARCHAR2 (20) NOT NULL ,
    adress                 VARCHAR2 (30) NOT NULL ,
    social_security_number INTEGER NOT NULL ,
    room_room_id           INTEGER NOT NULL
  ) ;
ALTER TABLE Customer ADD CONSTRAINT Customer_PK PRIMARY KEY ( name ) ;


CREATE TABLE Customer_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,name VARCHAR2 (20) NOT NULL
 ,adress VARCHAR2 (30) NOT NULL
 ,social_security_number INTEGER NOT NULL
 ,room_room_id INTEGER NOT NULL
 );

CREATE OR REPLACE TRIGGER Customer_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON Customer for each row 
 Declare 
  rec Customer_JN%ROWTYPE; 
  blank Customer_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.name := :NEW.name; 
      rec.adress := :NEW.adress; 
      rec.social_security_number := :NEW.social_security_number; 
      rec.room_room_id := :NEW.room_room_id; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.name := :OLD.name; 
      rec.adress := :OLD.adress; 
      rec.social_security_number := :OLD.social_security_number; 
      rec.room_room_id := :OLD.room_room_id; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into Customer_JN VALUES rec; 
  END; 
  /
CREATE TABLE room
  (
    room_id   INTEGER NOT NULL ,
    location  VARCHAR2 (15 CHAR) NOT NULL ,
    status    VARCHAR2 (20 CHAR) NOT NULL ,
    rate      INTEGER NOT NULL ,
    room_type VARCHAR2 (15 CHAR) NOT NULL
  ) ;
ALTER TABLE room ADD CHECK ( location  IN ('', '1st floor', '2nd floor', '3rd floor', '4th floor')) ;
ALTER TABLE room ADD CHECK ( status    IN ('', 'available', 'unavailable')) ;
ALTER TABLE room ADD CHECK ( rate      IN (, 1, 2, 3, 4, 5)) ;
ALTER TABLE room ADD CHECK ( room_type IN ('', 'luxurious', 'regular')) ;
ALTER TABLE room ADD CONSTRAINT room_PK PRIMARY KEY ( room_id ) ;


CREATE TABLE room_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,room_id INTEGER NOT NULL
 ,location VARCHAR2 (15 CHAR) NOT NULL
 ,status VARCHAR2 (20 CHAR) NOT NULL
 ,rate INTEGER NOT NULL
 ,room_type VARCHAR2 (15 CHAR) NOT NULL
 );

CREATE OR REPLACE TRIGGER room_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON room for each row 
 Declare 
  rec room_JN%ROWTYPE; 
  blank room_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.room_id := :NEW.room_id; 
      rec.location := :NEW.location; 
      rec.status := :NEW.status; 
      rec.rate := :NEW.rate; 
      rec.room_type := :NEW.room_type; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.room_id := :OLD.room_id; 
      rec.location := :OLD.location; 
      rec.status := :OLD.status; 
      rec.rate := :OLD.rate; 
      rec.room_type := :OLD.room_type; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into room_JN VALUES rec; 
  END; 
  /
CREATE TABLE special_services
  (
    service_id    INTEGER NOT NULL ,
    service_rate  INTEGER NOT NULL ,
    service_type  VARCHAR2 (20) NOT NULL ,
    Customer_name VARCHAR2 (20) NOT NULL
  ) ;
ALTER TABLE special_services ADD CHECK ( service_rate IN (, 1, 2, 3, 4, 5)) ;
ALTER TABLE special_services ADD CONSTRAINT special_services_PK PRIMARY KEY ( service_id, Customer_name ) ;


CREATE TABLE special_services_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,service_id INTEGER NOT NULL
 ,service_rate INTEGER NOT NULL
 ,service_type VARCHAR2 (20) NOT NULL
 ,Customer_name VARCHAR2 (20) NOT NULL
 );

CREATE OR REPLACE TRIGGER special_services_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON special_services for each row 
 Declare 
  rec special_services_JN%ROWTYPE; 
  blank special_services_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.service_id := :NEW.service_id; 
      rec.service_rate := :NEW.service_rate; 
      rec.service_type := :NEW.service_type; 
      rec.Customer_name := :NEW.Customer_name; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.service_id := :OLD.service_id; 
      rec.service_rate := :OLD.service_rate; 
      rec.service_type := :OLD.service_type; 
      rec.Customer_name := :OLD.Customer_name; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into special_services_JN VALUES rec; 
  END; 
  /
ALTER TABLE Customer ADD CONSTRAINT Customer_room_FK FOREIGN KEY ( room_room_id ) REFERENCES room ( room_id ) ;

ALTER TABLE special_services ADD CONSTRAINT special_services_Customer_FK FOREIGN KEY ( Customer_name ) REFERENCES Customer ( name ) ;


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             3
-- CREATE INDEX                             0
-- ALTER TABLE                             10
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
